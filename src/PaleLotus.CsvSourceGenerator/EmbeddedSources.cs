using System.Reflection;
using System.Text;

namespace PaleLotus.CsvSourceGenerator;

internal static class EmbeddedResources
{
    private static readonly Assembly ThisAssembly = typeof(EmbeddedResources).Assembly;
    private static string GeneratorName => ThisAssembly.GetName().Name;
    public static string GetGeneratedHeader()
    {
        return $"""
                //------------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by the {GeneratorName} source generator
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------------
                """;
    }    
    public static string ICsvSerializable { get; } = LoadEmbedded("ICsvSerializable.txt");
    public static string CsvSerializableAttribute { get; } = LoadEmbedded("CsvSerializableAttribute.txt");

    private static string LoadEmbedded(string templateName)
    {
        var resourceName = $"{GeneratorName}.Templates.{templateName}";
        using var stream = ThisAssembly.GetManifestResourceStream(resourceName);
        
        if (stream is null)
        {
            var existingResources = ThisAssembly.GetManifestResourceNames();
            throw new ArgumentException(
                $"Could not find embedded resource {resourceName}. Available names: {string.Join(", ", existingResources)}");
        }

        using var reader = new StreamReader(stream, Encoding.UTF8);
        return reader.ReadToEnd();
    }
}